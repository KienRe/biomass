name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  verify:
    name: ${{ matrix.command }}
    runs-on: ubuntu-22.04
    env:
      NEXT_TELEMETRY_DISABLED: 1
    strategy:
      fail-fast: false
      matrix:
        command: ['Format Check', 'Build & Test']
        include:
          - command: 'Format Check'
            run: npm run format:check
          - command: 'Build & Test'
            run: |
              npm run build
              npm run test

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - uses: actions/setup-node@v4
        with:
          node-version: "22.12"
      
      # See for details on npm node caching, https://www.voorhoede.nl/en/blog/super-fast-npm-install-on-github-actions/#fn1
      - uses: actions/cache@v4
        with:
          path: ~/.npm # Global npm cache on unix
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }} # Associate with full dependency tree
          restore-keys: ${{ runner.os }}-npm- # If cache miss, try to find for partial matches / reuse previous cache as starting point

      # Cache Next.js build cache
      - if: matrix.command == 'Build & Test'
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: ${{ runner.os }}-nextjs-

      # Should be fast due to cache
      - name: Install dependencies
        run: npm ci --ignore-scripts # Ignore native build steps (C++/...), use native-modules to check

      - name: ${{ matrix.command }}
        run: ${{ matrix.run }}
